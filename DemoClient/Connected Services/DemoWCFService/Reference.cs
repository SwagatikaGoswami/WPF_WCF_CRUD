//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DemoClient.DemoWCFService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/DemoWCFService")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DemoClient.DemoWCFService.Order[] OrdersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactTitle {
            get {
                return this.ContactTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactTitleField, value) != true)) {
                    this.ContactTitleField = value;
                    this.RaisePropertyChanged("ContactTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIDField, value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DemoClient.DemoWCFService.Order[] Orders {
            get {
                return this.OrdersField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdersField, value) != true)) {
                    this.OrdersField = value;
                    this.RaisePropertyChanged("Orders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/DemoWCFService")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DemoClient.DemoWCFService.Customer CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> FreightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> OrderDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RequiredDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipPostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipRegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ShipViaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ShippedDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DemoClient.DemoWCFService.Customer Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerID {
            get {
                return this.CustomerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIDField, value) != true)) {
                    this.CustomerIDField = value;
                    this.RaisePropertyChanged("CustomerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Freight {
            get {
                return this.FreightField;
            }
            set {
                if ((this.FreightField.Equals(value) != true)) {
                    this.FreightField = value;
                    this.RaisePropertyChanged("Freight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> OrderDate {
            get {
                return this.OrderDateField;
            }
            set {
                if ((this.OrderDateField.Equals(value) != true)) {
                    this.OrderDateField = value;
                    this.RaisePropertyChanged("OrderDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RequiredDate {
            get {
                return this.RequiredDateField;
            }
            set {
                if ((this.RequiredDateField.Equals(value) != true)) {
                    this.RequiredDateField = value;
                    this.RaisePropertyChanged("RequiredDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipAddress {
            get {
                return this.ShipAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipAddressField, value) != true)) {
                    this.ShipAddressField = value;
                    this.RaisePropertyChanged("ShipAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipCity {
            get {
                return this.ShipCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipCityField, value) != true)) {
                    this.ShipCityField = value;
                    this.RaisePropertyChanged("ShipCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipCountry {
            get {
                return this.ShipCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipCountryField, value) != true)) {
                    this.ShipCountryField = value;
                    this.RaisePropertyChanged("ShipCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipName {
            get {
                return this.ShipNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipNameField, value) != true)) {
                    this.ShipNameField = value;
                    this.RaisePropertyChanged("ShipName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipPostalCode {
            get {
                return this.ShipPostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipPostalCodeField, value) != true)) {
                    this.ShipPostalCodeField = value;
                    this.RaisePropertyChanged("ShipPostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipRegion {
            get {
                return this.ShipRegionField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipRegionField, value) != true)) {
                    this.ShipRegionField = value;
                    this.RaisePropertyChanged("ShipRegion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ShipVia {
            get {
                return this.ShipViaField;
            }
            set {
                if ((this.ShipViaField.Equals(value) != true)) {
                    this.ShipViaField = value;
                    this.RaisePropertyChanged("ShipVia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ShippedDate {
            get {
                return this.ShippedDateField;
            }
            set {
                if ((this.ShippedDateField.Equals(value) != true)) {
                    this.ShippedDateField = value;
                    this.RaisePropertyChanged("ShippedDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DemoWCFService.IDemoServiceServer")]
    public interface IDemoServiceServer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoServiceServer/GetCustomers", ReplyAction="http://tempuri.org/IDemoServiceServer/GetCustomersResponse")]
        DemoClient.DemoWCFService.Customer[] GetCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoServiceServer/GetCustomers", ReplyAction="http://tempuri.org/IDemoServiceServer/GetCustomersResponse")]
        System.Threading.Tasks.Task<DemoClient.DemoWCFService.Customer[]> GetCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoServiceServer/GetCustomerIds", ReplyAction="http://tempuri.org/IDemoServiceServer/GetCustomerIdsResponse")]
        string[] GetCustomerIds();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoServiceServer/GetCustomerIds", ReplyAction="http://tempuri.org/IDemoServiceServer/GetCustomerIdsResponse")]
        System.Threading.Tasks.Task<string[]> GetCustomerIdsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoServiceServer/GetCustomerById", ReplyAction="http://tempuri.org/IDemoServiceServer/GetCustomerByIdResponse")]
        DemoClient.DemoWCFService.Customer GetCustomerById(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoServiceServer/GetCustomerById", ReplyAction="http://tempuri.org/IDemoServiceServer/GetCustomerByIdResponse")]
        System.Threading.Tasks.Task<DemoClient.DemoWCFService.Customer> GetCustomerByIdAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoServiceServer/InsertCustomer", ReplyAction="http://tempuri.org/IDemoServiceServer/InsertCustomerResponse")]
        int InsertCustomer(DemoClient.DemoWCFService.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoServiceServer/InsertCustomer", ReplyAction="http://tempuri.org/IDemoServiceServer/InsertCustomerResponse")]
        System.Threading.Tasks.Task<int> InsertCustomerAsync(DemoClient.DemoWCFService.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoServiceServer/UpdateCustomer", ReplyAction="http://tempuri.org/IDemoServiceServer/UpdateCustomerResponse")]
        int UpdateCustomer(DemoClient.DemoWCFService.Customer currentCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoServiceServer/UpdateCustomer", ReplyAction="http://tempuri.org/IDemoServiceServer/UpdateCustomerResponse")]
        System.Threading.Tasks.Task<int> UpdateCustomerAsync(DemoClient.DemoWCFService.Customer currentCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoServiceServer/DeleteCustomer", ReplyAction="http://tempuri.org/IDemoServiceServer/DeleteCustomerResponse")]
        int DeleteCustomer(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoServiceServer/DeleteCustomer", ReplyAction="http://tempuri.org/IDemoServiceServer/DeleteCustomerResponse")]
        System.Threading.Tasks.Task<int> DeleteCustomerAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoServiceServer/GetOrders", ReplyAction="http://tempuri.org/IDemoServiceServer/GetOrdersResponse")]
        DemoClient.DemoWCFService.Order[] GetOrders(string custemerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoServiceServer/GetOrders", ReplyAction="http://tempuri.org/IDemoServiceServer/GetOrdersResponse")]
        System.Threading.Tasks.Task<DemoClient.DemoWCFService.Order[]> GetOrdersAsync(string custemerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoServiceServer/CreateOrder", ReplyAction="http://tempuri.org/IDemoServiceServer/CreateOrderResponse")]
        int CreateOrder(DemoClient.DemoWCFService.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoServiceServer/CreateOrder", ReplyAction="http://tempuri.org/IDemoServiceServer/CreateOrderResponse")]
        System.Threading.Tasks.Task<int> CreateOrderAsync(DemoClient.DemoWCFService.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoServiceServer/UpdateOrder", ReplyAction="http://tempuri.org/IDemoServiceServer/UpdateOrderResponse")]
        int UpdateOrder(DemoClient.DemoWCFService.Order currentOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoServiceServer/UpdateOrder", ReplyAction="http://tempuri.org/IDemoServiceServer/UpdateOrderResponse")]
        System.Threading.Tasks.Task<int> UpdateOrderAsync(DemoClient.DemoWCFService.Order currentOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoServiceServer/DeleteOrder", ReplyAction="http://tempuri.org/IDemoServiceServer/DeleteOrderResponse")]
        int DeleteOrder(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDemoServiceServer/DeleteOrder", ReplyAction="http://tempuri.org/IDemoServiceServer/DeleteOrderResponse")]
        System.Threading.Tasks.Task<int> DeleteOrderAsync(int orderId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDemoServiceServerChannel : DemoClient.DemoWCFService.IDemoServiceServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DemoServiceServerClient : System.ServiceModel.ClientBase<DemoClient.DemoWCFService.IDemoServiceServer>, DemoClient.DemoWCFService.IDemoServiceServer {
        
        public DemoServiceServerClient() {
        }
        
        public DemoServiceServerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DemoServiceServerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DemoServiceServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DemoServiceServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DemoClient.DemoWCFService.Customer[] GetCustomers() {
            return base.Channel.GetCustomers();
        }
        
        public System.Threading.Tasks.Task<DemoClient.DemoWCFService.Customer[]> GetCustomersAsync() {
            return base.Channel.GetCustomersAsync();
        }
        
        public string[] GetCustomerIds() {
            return base.Channel.GetCustomerIds();
        }
        
        public System.Threading.Tasks.Task<string[]> GetCustomerIdsAsync() {
            return base.Channel.GetCustomerIdsAsync();
        }
        
        public DemoClient.DemoWCFService.Customer GetCustomerById(string customerId) {
            return base.Channel.GetCustomerById(customerId);
        }
        
        public System.Threading.Tasks.Task<DemoClient.DemoWCFService.Customer> GetCustomerByIdAsync(string customerId) {
            return base.Channel.GetCustomerByIdAsync(customerId);
        }
        
        public int InsertCustomer(DemoClient.DemoWCFService.Customer customer) {
            return base.Channel.InsertCustomer(customer);
        }
        
        public System.Threading.Tasks.Task<int> InsertCustomerAsync(DemoClient.DemoWCFService.Customer customer) {
            return base.Channel.InsertCustomerAsync(customer);
        }
        
        public int UpdateCustomer(DemoClient.DemoWCFService.Customer currentCustomer) {
            return base.Channel.UpdateCustomer(currentCustomer);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCustomerAsync(DemoClient.DemoWCFService.Customer currentCustomer) {
            return base.Channel.UpdateCustomerAsync(currentCustomer);
        }
        
        public int DeleteCustomer(string customerId) {
            return base.Channel.DeleteCustomer(customerId);
        }
        
        public System.Threading.Tasks.Task<int> DeleteCustomerAsync(string customerId) {
            return base.Channel.DeleteCustomerAsync(customerId);
        }
        
        public DemoClient.DemoWCFService.Order[] GetOrders(string custemerId) {
            return base.Channel.GetOrders(custemerId);
        }
        
        public System.Threading.Tasks.Task<DemoClient.DemoWCFService.Order[]> GetOrdersAsync(string custemerId) {
            return base.Channel.GetOrdersAsync(custemerId);
        }
        
        public int CreateOrder(DemoClient.DemoWCFService.Order order) {
            return base.Channel.CreateOrder(order);
        }
        
        public System.Threading.Tasks.Task<int> CreateOrderAsync(DemoClient.DemoWCFService.Order order) {
            return base.Channel.CreateOrderAsync(order);
        }
        
        public int UpdateOrder(DemoClient.DemoWCFService.Order currentOrder) {
            return base.Channel.UpdateOrder(currentOrder);
        }
        
        public System.Threading.Tasks.Task<int> UpdateOrderAsync(DemoClient.DemoWCFService.Order currentOrder) {
            return base.Channel.UpdateOrderAsync(currentOrder);
        }
        
        public int DeleteOrder(int orderId) {
            return base.Channel.DeleteOrder(orderId);
        }
        
        public System.Threading.Tasks.Task<int> DeleteOrderAsync(int orderId) {
            return base.Channel.DeleteOrderAsync(orderId);
        }
    }
}
